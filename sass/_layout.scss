@use 'config/breakpoints' as *;

* {
  box-sizing: border-box;
}

.responsive-wrapper {
  display: flex;
  flex-flow: row wrap;
}

.push-footer {
  display: flex;
  min-height: 100vh;
  flex-direction: column;
  justify-content: flex-start;
  footer {
    margin-top: auto;
  }
}

// Grid system
.row {
  display: flex;
  flex-flow: row wrap;
}
:where([class*="col-"]) {
  width: 100%;
}
[class*="slice-in-"] {
  display: grid;
  & > * {
    max-width: 100%;
  }
}
@each $infix, $breakpoint in $breakpoints {
  @media only screen and (min-width: $breakpoint) {
    @for $i from 1 through 12 {
      .col-#{$i}-#{$infix} {
        width: calc(100% / 12 * $i);
      }
      .slice-in-#{$i}-#{$infix} {
        grid-template-columns: repeat($i, 1fr);
      }
    }
  }
}

// Hide and show
@each $infix, $breakpoint in $breakpoints {
  @media only screen and (min-width: #{$breakpoint}) {
    .hide-#{$infix} {
      display: none;
    }
    
  }
  @media only screen and (max-width: #{$breakpoint - 1px}) {
    .show-#{$infix} {
      display: none;
    }
  }
}
