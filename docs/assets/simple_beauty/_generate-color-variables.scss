@use 'sass:color';

$color-names: ( "canvas", "primary", "secondary", "tertiary", 
  "success", "danger", "warning", "info",
);

@mixin globals($colors, $default-text-contrast, $minimum-text-contrast, $border-contrast, $hover-contrast, $input-border-contrast) {
  @each $color-name, $color-code in $colors {
    --#{$color-name}-color: #{$color-code};
    // Text
    --text-contrast-#{$color-name}-color: #{contrast-background($color-code, $default-text-contrast)};
    @each $color-name2, $color-code2 in $colors {
      --#{$color-name2}-text-contrast-#{$color-name}-color: #{contrast-background($color-code, $minimum-text-contrast, $base: $color-code2)};
      // Input border
      --#{$color-name2}-input-border-contrast-#{$color-name}-color: #{contrast-background($color-code, $input-border-contrast, $base: $color-code2)};
    }
    // Border
    --#{$color-name}-border-color: #{contrast($color-code, $border-contrast)};
    // Hover
    --#{$color-name}-hover-color: #{contrast($color-code, $hover-contrast)};
  }
}

@function is-light($color-code) {
  @return lightness($color-code) > 50%;
}

@function contrast($color, $amount) {
  @if is-light($color) {
    @return darken($color, $amount);
  }
  @else {
    @return lighten($color, $amount);
  }
}

@function contrast-background($background, $contrast, $base: false) {
  @if $base {
    @if is-light($background) {
      @if lightness($background) - lightness($base) >= $contrast {
        @return  $base
      } @else {
        @return color.change($base, $lightness: clamp(0%, color.lightness($background) - $contrast, 100%))
      }
    } @else {
      @if lightness($base) - lightness($background) >=  $contrast {
        @return $base;
      }
      @else {
        @return color.change($base, $lightness: clamp(0%, color.lightness($background) + $contrast, 100%))
      }
    }
    } @else {
      @return contrast-background($background, $contrast, $base: $background);
    }
}